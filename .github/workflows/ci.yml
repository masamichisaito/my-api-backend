name: CI + Deploy (Backend)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: my_test_db
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: my_test_db
      DB_HOST: 127.0.0.1
      DB_PORT: 5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Wait for Postgres
        run: |
          until pg_isready -h 127.0.0.1 -p 5432; do
            echo "⏳ Waiting for postgres..."
            sleep 1
          done
          echo "✅ Postgres is ready!"

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  deploy-production:
    needs: backend-ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup DB connection env
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.production
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.production
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.production
          echo "NODE_ENV=production" >> .env.production

      - name: Run Sequelize migration on production DB
        env:
          NODE_ENV: production
        run: npx sequelize-cli db:migrate --env production

      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}